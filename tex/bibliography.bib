@techreport{Waterman:EECS-2014-54,
  Author = {Waterman, Andrew and Lee, Yunsup and Patterson, David A. and Asanović, Krste},
  Title = {The RISC-V Instruction Set Manual, Volume I: User-Level ISA, Version 2.0},
  Institution = {EECS Department, University of California, Berkeley},
  Year = {2014},
  Month = {5},
  URL = {http://www2.eecs.berkeley.edu/Pubs/TechRpts/2014/EECS-2014-54.html},
  Number = {UCB/EECS-2014-54}
}

@techreport{Waterman:EECS-2016-161,
  Author = {Waterman, Andrew and Lee, Yunsup and Patterson, David A. and Asanović, Krste},
  Title = {The RISC-V Instruction Set Manual Volume II: Privileged
Architecture Version 1.9.1},
  Institution = {EECS Department, University of California, Berkeley},
  Year = {2016},
  Month = {11},
  URL ={https://www2.eecs.berkeley.edu/Pubs/TechRpts/2016/EECS-2016-161.pdf},
  Number = {EECS-2016-161}
}



@ARTICLE{QC-Hexagon,
  author={Codrescu, Lucian and Anderson, Willie and Venkumanhanti, Suresh and Zeng, Mao and Plondke, Erich and Koob, Chris and Ingle, Ajay and Tabony, Charles and Maule, Rick},
  journal={IEEE Micro}, 
  title={Hexagon DSP: An Architecture Optimized for Mobile Multimedia and Communications}, 
  year={2014},
  volume={34},
  number={2},
  pages={34-43},
  doi={10.1109/MM.2014.12}}

@ARTICLE{moore,
  author={Moore, Gordon E.},
  journal={IEEE Solid-State Circuits Society Newsletter}, 
  title={Cramming more components onto integrated circuits, Reprinted from Electronics, volume 38, number 8, April 19, 1965, pp.114 ff.}, 
  year={2006},
  volume={11},
  number={3},
  pages={33-35},
  doi={10.1109/N-SSC.2006.4785860}}

@inproceedings{aa-intel-acq,
author = {Chiou, Derek},
title = {Intel Acquires Altera: How Will the World of FPGAs Be Affected?},
year = 2016,
isbn = 9781450338561,
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2847263.2857658},
doi = {10.1145/2847263.2857658},
abstract = {Intel's purchase of Altera is very likely to be the biggest single event in FPGA history and, therefore, have a profound impact on the FPGA world. This panel intends to explore the business and research opportunities that are potentially enabled and potentially squashed by the acquisition. Questions that will be explored by the panel include: What will be the impact on FPGA applications? Clearly, there is the potential of much tighter integration of CPU and FPGA, but what applications and usage models does that really enable?What will be the impact on FPGA business?What will be the impact on the FPGA research community?},
booktitle = {Proceedings of the 2016 ACM/SIGDA International Symposium on Field-Programmable Gate Arrays},
pages = 148,
numpages = 1,
keywords = {fpgas},
location = {Monterey, California, USA},
series = {FPGA '16}
}

@book{arm-manual,
author = {Seal, David},
title = {ARM Architecture Reference Manual},
year = 2000,
isbn = 0201737191,
publisher = {Addison-Wesley Longman Publishing Co., Inc.},
address = {USA},
edition = {2nd},
abstract = {From the Publisher:This is the authoritative reference guide to the ARM RISC architecture. Produced by the architects that are actively working on the ARM specification, the book contains detailed information about all versions of the ARM and Thumb instruction sets, the memory management and cache functions, as well as optimized code examples.}
}

@INPROCEEDINGS{spectre,
  author={Kocher, Paul and Horn, Jann and Fogh, Anders and Genkin, Daniel and Gruss, Daniel and Haas, Werner and Hamburg, Mike and Lipp, Moritz and Mangard, Stefan and Prescher, Thomas and Schwarz, Michael and Yarom, Yuval},
  booktitle={2019 IEEE Symposium on Security and Privacy (SP)}, 
  title={Spectre Attacks: Exploiting Speculative Execution}, 
  year={2019},
  volume={},
  number={},
  pages={1-19},
  doi={10.1109/SP.2019.00002}}

@inproceedings{meltdown,
 author = {Moritz Lipp and Michael Schwarz and Daniel Gruss and Thomas Prescher and Werner Haas and Anders Fogh and Jann Horn and Stefan Mangard and Paul Kocher and Daniel Genkin and Yuval Yarom and Mike Hamburg},
 title = {Meltdown: Reading Kernel Memory from User Space},
 booktitle = {27th {USENIX} Security Symposium ({USENIX} Security 18)},
 year = {2018}
}

@online{dg-verilator,
  Author = {Daniel Gisselquist},
  Title = {Taking a New Look At Verilator},
  Year = 2017,
  URL = {https://zipcpu.com/blog/2017/06/21/looking-at-verilator.html},
  urldate = {2017-06-21}
  }

@ARTICLE{symbiflow,
  author={Murray, Kevin E. and Elgammal, Mohamed A. and Betz, Vaughn and Ansell, Tim and Rothman, Keith and Comodi, Alessandro},
  journal={IEEE Micro}, 
  title={SymbiFlow and VPR: An Open-Source Design Flow for Commercial and Novel FPGAs}, 
  year=2020,
  volume=40,
  number=4,
  pages={49-57},
  doi={10.1109/MM.2020.2998435}}

@INPROCEEDINGS{chisel,
  author={Bachrach, Jonathan and Vo, Huy and Richards, Brian and Lee, Yunsup and Waterman, Andrew and Avižienis, Rimas and Wawrzynek, John and Asanović, Krste},
  booktitle={DAC Design Automation Conference 2012}, 
  title={Chisel: Constructing hardware in a Scala embedded language}, 
  year={2012},
  volume={},
  number={},
  pages={1212-1221},
  doi={10.1145/2228360.2228584}}

@INPROCEEDINGS{bluespec,
  author={Nikhil, R.},
  booktitle={Proceedings. Second ACM and IEEE International Conference on Formal Methods and Models for Co-Design, 2004. MEMOCODE '04.}, 
  title={Bluespec System Verilog: efficient, correct RTL from high level specifications}, 
  year={2004},
  volume={},
  number={},
  pages={69-70},
  doi={10.1109/MEMCOD.2004.1459818}}

@INPROCEEDINGS{bluevec,
  author={Naylor, Matthew and Fox, Paul J and Markettos, A Theodore and Moore, Simon W},
  booktitle={2013 23rd International Conference on Field programmable Logic and Applications}, 
  title={Managing the FPGA memory wall: Custom computing or vector processing?}, 
  year={2013},
  volume={},
  number={},
  pages={1-6},
  doi={10.1109/FPL.2013.6645538}}

@techreport{riscv-v-spec,
  Author = {Waterman, Andrew and Lee, Yunsup and Patterson, David A. and Asanović, Krste},
  Title = {Working draft of the RISC-V Vector Instruction Set Architectue Extension},
  Institution = {EECS Department, University of California, Berkeley},
  Year = {2021},
  Month = {1},
  URL = {https://github.com/riscv/riscv-v-spec/releases/tag/v0.10},
  Number = {}
}

@tectreport{rocket,
  title={The Rocket Chip Generator},
  author={K. Asanovi{\'c} and Rimas Avizienis and J. Bachrach and S. Beamer and David Biancolin and Christopher Celio and Henry Cook and Palmer Dabbelt and J. Hauser and Adam M. Izraelevitz and Sagar Karandikar and Ben Keller and Donggyu Kim and Jack Koenig and Yunsup Lee and Eric Love and Martin Maas and Albert Magyar and Howard Mao and Miquel Moret{\'o} and Albert J. Ou and D. Patterson and B. Richards and C. Schmidt and Stephen Twigg and Huy Vo and Andrew Waterman},
  Institution = {EECS Department, University of California, Berkeley},
  Year = {2016},
  Month = {4},
  URL = {http://www.eecs.berkeley.edu/Pubs/TechRpts/2016/EECS-2016-17.html},
  Number = {UCB/EECS-2016-17}
}

@INPROCEEDINGS{riscy-ooo,
  author={Zhang, Sizhuo and Wright, Andrew and Bourgeat, Thomas and Arvind, Arvind},
  booktitle={2018 51st Annual IEEE/ACM International Symposium on Microarchitecture (MICRO)}, 
  title={Composable Building Blocks to Open up Processor Design}, 
  year={2018},
  volume={},
  number={},
  pages={68-81},
  doi={10.1109/MICRO.2018.00015}}

@online{piccolo,
   title={Piccolo Risc-V Processor Source Code},
   author={Bluespec Inc.},
   year={2019},
   URL = {https://github.com/bluespec/Piccolo},
   urldate = {2021-05-15}
}
@online{flute,
   title={Flute Risc-V Processor Source Code},
   author={Bluespec Inc.},
   year={2019},
   URL = {https://github.com/bluespec/Flute},
   urldate = {2021-05-15}
}
@online{toooba,
   title={TOOOBA Risc-V Processor Source Code},
   author={Bluespec Inc.},
   year={2019},
   URL = {https://github.com/bluespec/Toooba},
   urldate = {2021-05-15}
}

@INPROCEEDINGS{riscv-gcc-vs-llvm,
  author={Poorhosseini, Mehrdad and Nebel, Wolfgang and Grüttner, Kim},
  booktitle={2020 International Conference on Omni-layer Intelligent Systems (COINS)}, 
  title={A Compiler Comparison in the RISC-V Ecosystem}, 
  year={2020},
  volume={},
  number={},
  pages={1-6},
  doi={10.1109/COINS49042.2020.9191411}}

@online{linker-blog,
   title={From Zero to main(): Demystifying Firmware Linker Scripts},
   author={François Baldassari},
   year={2019},
   URL = {https://github.com/bluespec/Toooba},
   urldate = {2016-06-25}
}

@online{ea-printf,
   title={An Embedded-friendly printf Implementation},
   author={Phillip Johnston},
   year={2019},
   URL = {https://embeddedartistry.com/blog/2019/11/06/an-embedded-friendly-printf-implementation/},
   urldate = {2020-06-21}
   }

@online{vexriscv,
title = {The VexRiscV CPU - A New Way to Design},
author = {Tom Verbeure},
year = {2018},
URL = {https://tomverbeure.github.io/rtl/2018/12/06/The-VexRiscV-CPU-A-New-Way-To-Design.html},
urldate = {2018-12-06}
}

@book{x86-simd,
author = {Kusswurm, Daniel},
title = {Modern X86 Assembly Language Programming: 32-Bit, 64-Bit, SSE, and AVX},
year = {2014},
isbn = {1484200659},
publisher = {Apress},
address = {USA},
edition = {1st},
abstract = {Modern X86 Assembly Language Programming shows the fundamentals of x86 assembly language programming. It focuses on the aspects of the x86 instruction set that are most relevant to application software development. The book's structure and sample code are designed to help the reader quickly understand x86 assembly language programming and the computational capabilities of the x86 platform. Major topics of the book include the following:32-bit core architecture, data types, internal registers, memory addressing modes, and the basic instruction setX87 core architecture, register stack, special purpose registers, floating-point encodings, and instruction set MMX technology and instruction set Streaming SIMD extensions (SSE) and Advanced Vector Extensions (AVX) including internal registers, packed integer arithmetic, packed and scalar floating-point arithmetic, and associated instruction sets64-bit core architecture, data types, internal registers, memory addressing modes, and the basic instruction set64-bit extensions to SSE and AVX technologies X86 assembly language optimization strategies and techniques What youll learn How to use the x86s 32-bit and 64-bit instruction sets to create performance-enhancing functions that are callable from a high-level language (C++) How to use x86 assembly language to efficiently manipulate common programming constructs including integers, floating-point values, text strings, arrays, and structures How to use the SSE and AVX extensions to significantly accelerate the performance of computationally-intensive algorithms and subroutines in problem domains such as image processing, computer graphics, mathematics, and statistics How to use various coding strategies and techniques to optimally exploit the x86s microarchitecture for maximum possible performance Who this book is for The target audience for Modern X86 Assembly Language Programming is software developers including: Software developers who are creating application programs for Windows-based platforms and want to learn how to write performance-enhancing algorithms and functions using x86 assembly language Software developers who are creating application programs for non-Windows environments and want to learn x86 assembly language programming Software developers who have a basic understanding of x86 assembly language programming and want to learn how to use SSE and AVX Software developers and computer science students who want or need to gain a better understanding of the x86 platform including its internal architecture and instruction sets The primary audience for the book is Windows software developers since the sample code will be created using Visual C++ and Microsoft Macro Assembler. Developers targeting non- Windows platforms, however, also can learn from the book since most of the content will be organized and communicated independent of any specific operating system. In order to understand the books subject material, a background that includes some programming experience using C or C++ will be helpful. Experience with or knowledge of a particular Windows API will not be a prerequisite to benefit from the book.}
}

@online{spike,
title = {Spike Risc-V ISA Simulator},
author = {Risc-V Foundation},
year = {2019},
URL = {https://github.com/riscv/riscv-isa-sim},
urldate = {2018-04-01}
}

  @misc{axi4:wiki,
    author = "{Wikipedia contributors}",
    title = "Advanced eXtensible Interface --- {Wikipedia}{,} The Free Encyclopedia",
    year = "2021",
    url = "https://en.wikipedia.org/w/index.php?title=Advanced_eXtensible_Interface&oldid=1015064440",
    note = "[Online; accessed 27-May-2021]"
  }

@online{bluelink,
  title = {BlueLink IBM Coherent Accelerator-Processor Interface (CAPI)},
  author ={Jeffrey Cassidy},
  year = {2015},
  URL = {https://github.com/jeffreycassidy/BlueLink},
  urldate = {2021-05-01}
  }

@online{arm-irl,
title={Beginner guide on Interrupt Latency of the Arm Cortex M processors},
author={ARM},
year={2016},
URL = {https://community.arm.com/developer/ip-products/processors/b/processors-ip-blog/posts/beginner-guide-on-interrupt-latency-and-interrupt-latency-of-the-arm-cortex-m-processors},
urldate = {2016-04-01}
}

@online{sifive-ir,
title={SiFive Interrupt Cookbook: Version 1.0},
author={SiFive, Inc.},
year={2019},
URL = {https://sifive.cdn.prismic.io/sifive/0d163928-2128-42be-a75a-464df65e04e0_sifive-interrupt-cookbook.pdf},
urldate = {2021-05-01}
}

